{"version":3,"file":"js/943.ec8fb63b.js","mappings":"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","sources":["webpack://vue-crm/./src/utils/localize.js","webpack://vue-crm/./src/views/PlanningView.vue","webpack://vue-crm/./src/views/PlanningView.vue?9fd6"],"sourcesContent":["import store from '@/store'\nimport ru from '@/locales/ru.json'\nimport en from '@/locales/en.json'\n\nconst locales = {\n  'ru-RU': ru,\n  'en-US': en\n}\n\nexport default function localize(key) {\n  const locale = store.getters.info.locale || 'en-US'\n  return locales[locale][key] || '[Localize error]: key not found'\n}\n","<template>\n  <div>\n    <div class=\"page-title\">\n      <h3>{{ $localize('Planning') }}</h3>\n      <h4>{{ getCurrency(info.bill) }}</h4>\n    </div>\n    <Loader v-if=\"loading\" />\n    <p v-else-if=\"!categories.length\" class=\"center\">\n      {{ $localize('Cat_Message') }}\n    </p>\n    <section v-else>\n      <div v-for=\"cat of categories\" :key=\"cat.id\">\n        <p>\n          <strong>{{ cat.name }}</strong>\n          {{ getCurrency(cat.spend) }} {{ $localize('From') }}\n          {{ getCurrency(cat.limit) }}\n        </p>\n        <div class=\"progress\" v-tooltip=\"cat.tooltip\">\n          <div\n            class=\"determinate\"\n            :class=\"[cat.progressColor]\"\n            :style=\"{ width: cat.progressPercent + '%' }\"\n          ></div>\n        </div>\n      </div>\n    </section>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\nimport { computed } from 'vue'\nimport { useHead } from '@vueuse/head'\nimport localize from '@/utils/localize'\nexport default {\n  setup() {\n    useHead({\n      title: computed(() => localize('ProfileTitle'))\n    })\n  },\n  // eslint-disable-next-line vue/multi-word-component-names\n  name: 'planning',\n  data: () => ({\n    loading: true,\n    categories: [],\n  }),\n  async mounted() {\n    const records = await this.$store.dispatch('fetchRecords')\n    const categories = await this.$store.dispatch('fetchCategories')\n    this.categories = categories.map((cat) => {\n      const spend = records\n        .filter((r) => r.categoryId === cat.id) //только записи в данной категории\n        .filter((r) => r.type === 'cost') //только расходы\n        .reduce((total, record) => {\n          //сумма этих расходов\n          return (total += +record.amount)\n        }, 0)\n      const percent = (100 * spend) / cat.limit\n      const progressPercent = percent > 100 ? 100 : percent\n      const progressColor =\n        percent < 60 ? 'green' : percent < 100 ? 'yellow' : 'red'\n      const tooltipValue = cat.limit - spend\n      const tooltip = `${\n        tooltipValue < 0 ? localize('Exceeded') : localize('Left')\n      } ${this.getCurrency(Math.abs(tooltipValue))}`\n      return {\n        ...cat,\n        spend,\n        progressPercent,\n        progressColor,\n        tooltip,\n      }\n    })\n    this.loading = false\n  },\n  computed: {\n    ...mapGetters(['info']),\n  },\n  methods: {\n    getCurrency(value) {\n      return new Intl.NumberFormat('ru-Ru', {\n        style: 'currency',\n        currency: 'RUB',\n      }).format(value)\n    },\n  },\n}\n</script>\n","import { render } from \"./PlanningView.vue?vue&type=template&id=b3d48622\"\nimport script from \"./PlanningView.vue?vue&type=script&lang=js\"\nexport * from \"./PlanningView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\nprokof\\\\Documents\\\\learnVueJS\\\\vue-crm\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["locales","ru","en","localize","key","locale","store","class","_createElementBlock","_createElementVNode","_toDisplayString","_ctx","$options","bill","_createBlock","_component_Loader","length","_hoisted_3","_Fragment","_renderList","cat","id","name","spend","limit","progressColor","style","width","progressPercent","tooltip","setup","useHead","title","computed","data","loading","categories","async","records","this","$store","dispatch","map","filter","r","categoryId","type","reduce","total","record","amount","percent","tooltipValue","getCurrency","Math","abs","mapGetters","methods","value","Intl","NumberFormat","currency","format","__exports__","render"],"sourceRoot":""}